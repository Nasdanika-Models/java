/**
 */
package org.nasdanika.models.java;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Generation Mode</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * <!-- begin-model-doc -->
 * Defines how own source and contents are usd by the generate() method
 * <!-- end-model-doc -->
 * @see org.nasdanika.models.java.JavaPackage#getGenerationMode()
 * @model
 * @generated
 */
public enum GenerationMode implements Enumerator {
	/**
	 * The '<em><b>SOURCE</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Use only own source, ingnore contents
	 * <!-- end-model-doc -->
	 * @see #SOURCE_VALUE
	 * @generated
	 * @ordered
	 */
	SOURCE(0, "SOURCE", "SOURCE"),

	/**
	 * The '<em><b>CONTENTS</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Do not use own source, generate from contents
	 * <!-- end-model-doc -->
	 * @see #CONTENTS_VALUE
	 * @generated
	 * @ordered
	 */
	CONTENTS(1, "CONTENTS", "CONTENTS"),

	/**
	 * The '<em><b>COMPOSE</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Concatenate own source with source generated by contents
	 * <!-- end-model-doc -->
	 * @see #COMPOSE_VALUE
	 * @generated
	 * @ordered
	 */
	COMPOSE(2, "COMPOSE", "COMPOSE"),

	/**
	 * The '<em><b>CONTENTS IF NO SOURCE</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Use only own source if it is not blank and ingnore contents. Otherwise use contents.
	 * <!-- end-model-doc -->
	 * @see #CONTENTS_IF_NO_SOURCE_VALUE
	 * @generated
	 * @ordered
	 */
	CONTENTS_IF_NO_SOURCE(3, "CONTENTS_IF_NO_SOURCE", "CONTENTS_IF_NO_SOURCE"), /**
	 * The '<em><b>MERGE</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Own source (original) is merged with new source generated from contents
	 * <!-- end-model-doc -->
	 * @see #MERGE_VALUE
	 * @generated
	 * @ordered
	 */
	MERGE(4, "MERGE", "MERGE");

	/**
	 * The '<em><b>SOURCE</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Use only own source, ingnore contents
	 * <!-- end-model-doc -->
	 * @see #SOURCE
	 * @model
	 * @generated
	 * @ordered
	 */
	public static final int SOURCE_VALUE = 0;

	/**
	 * The '<em><b>CONTENTS</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Do not use own source, generate from contents
	 * <!-- end-model-doc -->
	 * @see #CONTENTS
	 * @model
	 * @generated
	 * @ordered
	 */
	public static final int CONTENTS_VALUE = 1;

	/**
	 * The '<em><b>COMPOSE</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Concatenate own source with source generated by contents
	 * <!-- end-model-doc -->
	 * @see #COMPOSE
	 * @model
	 * @generated
	 * @ordered
	 */
	public static final int COMPOSE_VALUE = 2;

	/**
	 * The '<em><b>CONTENTS IF NO SOURCE</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Use only own source if it is not blank and ingnore contents. Otherwise use contents.
	 * <!-- end-model-doc -->
	 * @see #CONTENTS_IF_NO_SOURCE
	 * @model
	 * @generated
	 * @ordered
	 */
	public static final int CONTENTS_IF_NO_SOURCE_VALUE = 3;

	/**
	 * The '<em><b>MERGE</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Own source (original) is merged with new source generated from contents
	 * <!-- end-model-doc -->
	 * @see #MERGE
	 * @model
	 * @generated
	 * @ordered
	 */
	public static final int MERGE_VALUE = 4;

	/**
	 * An array of all the '<em><b>Generation Mode</b></em>' enumerators.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private static final GenerationMode[] VALUES_ARRAY =
		new GenerationMode[] {
			SOURCE,
			CONTENTS,
			COMPOSE,
			CONTENTS_IF_NO_SOURCE,
			MERGE,
		};

	/**
	 * A public read-only list of all the '<em><b>Generation Mode</b></em>' enumerators.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final List<GenerationMode> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

	/**
	 * Returns the '<em><b>Generation Mode</b></em>' literal with the specified literal value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param literal the literal.
	 * @return the matching enumerator or <code>null</code>.
	 * @generated
	 */
	public static GenerationMode get(String literal) {
		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
			GenerationMode result = VALUES_ARRAY[i];
			if (result.toString().equals(literal)) {
				return result;
			}
		}
		return null;
	}

	/**
	 * Returns the '<em><b>Generation Mode</b></em>' literal with the specified name.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param name the name.
	 * @return the matching enumerator or <code>null</code>.
	 * @generated
	 */
	public static GenerationMode getByName(String name) {
		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
			GenerationMode result = VALUES_ARRAY[i];
			if (result.getName().equals(name)) {
				return result;
			}
		}
		return null;
	}

	/**
	 * Returns the '<em><b>Generation Mode</b></em>' literal with the specified integer value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the integer value.
	 * @return the matching enumerator or <code>null</code>.
	 * @generated
	 */
	public static GenerationMode get(int value) {
		switch (value) {
			case SOURCE_VALUE: return SOURCE;
			case CONTENTS_VALUE: return CONTENTS;
			case COMPOSE_VALUE: return COMPOSE;
			case CONTENTS_IF_NO_SOURCE_VALUE: return CONTENTS_IF_NO_SOURCE;
			case MERGE_VALUE: return MERGE;
		}
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private final int value;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private final String name;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private final String literal;

	/**
	 * Only this class can construct instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private GenerationMode(int value, String name, String literal) {
		this.value = value;
		this.name = name;
		this.literal = literal;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public int getValue() {
	  return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String getName() {
	  return name;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String getLiteral() {
	  return literal;
	}

	/**
	 * Returns the literal value of the enumerator, which is its string representation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString() {
		return literal;
	}
	
} //GenerationMode
